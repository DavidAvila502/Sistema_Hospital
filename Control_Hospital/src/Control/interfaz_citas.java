/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Control;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Dolar
 */
public class interfaz_citas extends javax.swing.JInternalFrame {
    
        conexion     conex = new conexion();
    consultas_hospital cons = new consultas_hospital();
    String ls_accion;
    
    
    
    int ll_folio;
    String ls_nombre,ls_paciente,ls_medico,ls_especialidad,ls_fecha,ls_hora;
    boolean lb_nuevo=false;

    /** Creates new form interfaz_citas */
    public interfaz_citas() throws SQLException {
        initComponents();
        
        mostrarDatosConTableModel();
        
        llenarComboBoxPaciente();
  
        llenarComboBoxMedico();
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        miTabla2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jtf_especialidad = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtf_fecha = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_hora = new javax.swing.JTextField();
        jtf_folio = new javax.swing.JTextField();
        btn_alta = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_grabar = new javax.swing.JButton();
        cbx_paciente = new javax.swing.JComboBox<>();
        btn_cancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btn_eliminar = new javax.swing.JButton();
        cbx_medico = new javax.swing.JComboBox<>();
        btn_salir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        miTabla2=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){

                return false;

            }

        };
        miTabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Folio", "Paciente", "Medico", "Especialidad", "Fecha", "Hora"
            }
        ));
        miTabla2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miTabla2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(miTabla2);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CITAS MEDICAS");

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jtf_especialidad.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("YYYY-MM-DD");

        jLabel5.setText("Especialidad");

        jLabel6.setText("Fecha");

        jLabel7.setText("Hora");

        jLabel2.setText("Folio");

        jtf_folio.setEditable(false);

        btn_alta.setText("Alta");
        btn_alta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_altaActionPerformed(evt);
            }
        });

        jLabel3.setText("Paciente");

        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        jLabel4.setText("Medico");

        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        cbx_medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_medicoActionPerformed(evt);
            }
        });

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_folio, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_paciente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbx_medico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(122, 122, 122)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_alta)
                        .addGap(18, 18, 18)
                        .addComponent(btn_grabar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtf_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtf_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8)
                                    .addGap(46, 46, 46)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_cancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_eliminar)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtf_folio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbx_paciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbx_medico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtf_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtf_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_alta)
                        .addComponent(btn_grabar)
                        .addComponent(btn_cancelar)
                        .addComponent(btn_eliminar)
                        .addComponent(btn_salir)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 83, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        // TODO add your handling code here:
        
        
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void cbx_medicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_medicoActionPerformed
        // TODO add your handling code here:
        String cadena="",nomb;
        int posicion=0;
        
        
        
        try{
        cadena=cbx_medico.getSelectedItem().toString();
       
        
        ls_accion="SELECT especialidad FROM medicos WHERE nombre = '"+cadena+"'";
        
        
        //Crea un objeto Statemen, para poder ejecutar una instruccion SQL
        
        Statement st = conex.getConnection().createStatement();
        
        ResultSet rs = st.executeQuery(ls_accion);

       /* while(rs.next()){
     
        jComboBox2.addItem(rs.getString(1)+".- "+rs.getString(2));
        
        }
      */
       if(rs.next()){
       jtf_especialidad.setText(rs.getString(1));
       }
        
      rs.close();//Libera la resultSet
        st.close();//Libera el Stetement 
        
        }catch(SQLException ex){
    
    Logger.getLogger(interfaz_citas.class.getName()).log(Level.SEVERE,null,ex);
    
    }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_cbx_medicoActionPerformed

    private void btn_altaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_altaActionPerformed
        // TODO add your handling code here:
        
        lb_nuevo=true;
        Limpiar();
       
        
        
        
        
    }//GEN-LAST:event_btn_altaActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        
        Limpiar();
        
        
        
        
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed
        // TODO add your handling code here:
        
         ll_folio=0;
         
         ls_paciente=cbx_paciente.getSelectedItem().toString();
         ls_medico=cbx_medico.getSelectedItem().toString();
         ls_especialidad=jtf_especialidad.getText();
         ls_fecha=jtf_fecha.getText();
         ls_hora=jtf_hora.getText();
         
        if(lb_nuevo){//INSERTA NUEVO REGISTRO
        cons.registrarCITAS(1, ll_folio, ls_paciente, ls_medico, ls_especialidad, ls_fecha, ls_hora, conex);
        
        
            
            
            
            
            
        
        
        
        }else{//ACTUALIZA REGISTRO
        ll_folio=Integer.parseInt(jtf_folio.getText());
        cons.registrarCITAS(2, ll_folio, ls_paciente, ls_medico, ls_especialidad, ls_fecha, ls_hora, conex);
        
        
        
        
        }
        
        
        mostrarDatosConTableModel();
        Limpiar();
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        ll_folio=Integer.parseInt(jtf_folio.getText());
        
        cons.registrarCITAS(3, ll_folio, ls_paciente, ls_medico, ls_especialidad, ls_fecha, ls_hora, conex);
        
        
        
        mostrarDatosConTableModel();
        Limpiar();
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void miTabla2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miTabla2MouseClicked
        // TODO add your handling code here:
        
        int fila =miTabla2.getSelectedRow();
        jtf_folio.setText(miTabla2.getValueAt(fila, 0).toString());
        jtf_fecha.setText(miTabla2.getValueAt(fila, 4).toString());
        jtf_hora.setText(miTabla2.getValueAt(fila, 5).toString());
        
        
        
        
        
        
        
        
         /*MOSTRAR EN EL COMBOBOX EL PACIENTE */
          int obb=0;
         int nitems =cbx_paciente.getItemCount();
         if(nitems>0){
             
       
        
        String elemento_tabla=miTabla2.getValueAt(fila, 1).toString();
        
         for(int i=1;i<nitems ;){
         
        String texto=cbx_paciente.getItemAt(i);
       
        
        if(elemento_tabla.equals(texto)){
        
        obb=i;
        break;
        
        
        }
        else{
        i++;
        
        }
        
        
        
        
         
         }
         
    
    
    }//GEN-LAST:event_miTabla2MouseClicked
   
    cbx_paciente.setSelectedIndex(obb);
    
    
    
    
    
    
    
    
    
    
    
    /*MOSTRAR EN EL COMBOBOX EL MEDICO */
          int obba=0;
         int pnitems =cbx_medico.getItemCount();
         if(pnitems>0){
             
       
        
        String elemento2_tabla=miTabla2.getValueAt(fila, 2).toString();
        
         for(int i=1;i<nitems ;){
         
        String texto2=cbx_medico.getItemAt(i);
       
        
        if(elemento2_tabla.equals(texto2)){
        
        obba=i;
        break;
        
        
        }
        else{
        i++;
        
        }
        
        
        
        
         
         }
         
    
    
    }             
    
    
    
    
    cbx_medico.setSelectedIndex(obba);
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    lb_nuevo=false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alta;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_salir;
    private javax.swing.JComboBox<String> cbx_medico;
    private javax.swing.JComboBox<String> cbx_paciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtf_especialidad;
    private javax.swing.JTextField jtf_fecha;
    private javax.swing.JTextField jtf_folio;
    private javax.swing.JTextField jtf_hora;
    private javax.swing.JTable miTabla2;
    // End of variables declaration//GEN-END:variables

    
    
    
    
    public void llenarComboBoxPaciente() throws SQLException{
    
     ls_accion="SELECT * FROM pacientes";
        
        
        //Crea un objeto, para poder ejecutar una instruccion sql
        Statement st= conex.getConnection().createStatement();
        
        //Genera un query o consulta de la tabla especificada y
        //regresa el resultado de la consulta de un objeto resultset
        
        ResultSet rs = st.executeQuery(ls_accion);        
        
        
        //Se recorre a tabla virtual(ResultSet) en la memoria
        while(rs.next())//Mueve el cursor al siguiente reegistro
        {
        
         cbx_paciente.addItem(rs.getString(2));
        
        
        }
        
        rs.close();//Libera la resultSet
        st.close();//Libera el Stetement
        
    
        
        
        
    
    
    
    
    }
    
    public void llenarComboBoxMedico() throws SQLException{
    
    
    ls_accion="SELECT * FROM medicos";
        
        
        //Crea un objeto, para poder ejecutar una instruccion sql
        Statement st= conex.getConnection().createStatement();
        
        //Genera un query o consulta de la tabla especificada y
        //regresa el resultado de la consulta de un objeto resultset
        
        ResultSet rs = st.executeQuery(ls_accion);        
        
        
        //Se recorre a tabla virtual(ResultSet) en la memoria
        while(rs.next())//Mueve el cursor al siguiente reegistro
        {
        
         cbx_medico.addItem(rs.getString(2));
        
        
        }
        
        rs.close();//Libera la resultSet
        st.close();//Libera el Stetement
        
    
    
    
    
    
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     private void mostrarDatosConTableModel() {
		
            //Crea un modelo de la tabla visual
               DefaultTableModel model = new DefaultTableModel();// definimos el objeto tableModel
		
                //Asignamos la tabla modelo a la tabla creada
		miTabla2.setModel(model);
		model.addColumn("Folio");
		model.addColumn("Paciente");
                model.addColumn("Medico");
                model.addColumn("Especialidad");
                model.addColumn("Fecha");
                model.addColumn("Hora");
                
                
                
	

                //Ordenar las columnas
                TableRowSorter<TableModel> ordena =new TableRowSorter<TableModel>(model);
                miTabla2.setRowSorter(ordena);
                         
		/* enviamos el objeto TableModel, como mandamos el objeto podemos
		  manipularlo desde el metodo */
		cons.consultaCitaConTableModel(model, conex);       
	}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

private void Limpiar(){

    jtf_folio.setText("");
   jtf_hora.setText("");
   jtf_fecha.setText("");
    
    
    lb_nuevo=true;

    
    
    
    
    

}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
}
